version: '3.4'
services:
  localstack:
    image: localstack/localstack
    ports:
      - '4566:4566'
    environment:
      - DEFAULT_REGION=us-east-1
      - SERVICES=sqs,s3
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - '${TMPDIR:-/tmp/localstack}:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - ./localstack_bootstrap:/docker-entrypoint-initaws.d/
  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - es-net
    ports:
      - 9200:9200
  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.4.3
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
  db:
    image: mysql/mysql-server:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ruby_on_rails_app_development
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306"
    expose:
      - "3306"
    command: --default-authentication-plugin=mysql_native_password

  app:
    build: .
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    volumes:
      - ".:/app"
    ports:
      - "3000:3000"
    depends_on:
      - db
    links:
      - db
    environment:
      DB_USER: root
      DB_NAME: ruby_on_rails_app_development
      DB_PASSWORD: root
      DB_HOST: db
volumes:
  es_data:
    driver: local
networks:
  es-net:
    driver: bridge
